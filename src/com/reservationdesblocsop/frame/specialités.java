/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.reservationdesblocsop.frame;

import java.beans.PropertyVetoException;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author chayma
 */
public class specialités extends javax.swing.JFrame {
    int xMouse,yMouse;

    /**
     * Creates new form spécialtité
     */
    public specialités() {
        initComponents();
        setSize(1045,615);
        setLocation(250,100);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        ortho = new javax.swing.JButton();
        plas = new javax.swing.JButton();
        stoma = new javax.swing.JButton();
        ORL = new javax.swing.JButton();
        urologie = new javax.swing.JButton();
        viscerale = new javax.swing.JButton();
        ophta = new javax.swing.JButton();
        gyné = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        desk = new javax.swing.JDesktopPane();
        close = new javax.swing.JLabel();
        resize = new javax.swing.JLabel();
        movejFrame = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        jPanel1.setLayout(null);

        ortho.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/reservationdesblocop/images/ortho.png"))); // NOI18N
        ortho.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        ortho.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                orthoActionPerformed(evt);
            }
        });
        jPanel1.add(ortho);
        ortho.setBounds(920, 30, 120, 60);

        plas.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/reservationdesblocop/images/plast.png"))); // NOI18N
        plas.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        plas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                plasActionPerformed(evt);
            }
        });
        jPanel1.add(plas);
        plas.setBounds(790, 30, 120, 60);

        stoma.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/reservationdesblocop/images/stoma.png"))); // NOI18N
        stoma.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        stoma.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stomaActionPerformed(evt);
            }
        });
        jPanel1.add(stoma);
        stoma.setBounds(650, 40, 130, 50);

        ORL.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/reservationdesblocop/images/orl.png"))); // NOI18N
        ORL.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        ORL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ORLActionPerformed(evt);
            }
        });
        jPanel1.add(ORL);
        ORL.setBounds(530, 30, 100, 60);

        urologie.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/reservationdesblocop/images/urologie.png"))); // NOI18N
        urologie.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        urologie.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                urologieActionPerformed(evt);
            }
        });
        jPanel1.add(urologie);
        urologie.setBounds(400, 30, 110, 50);

        viscerale.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/reservationdesblocop/images/vis.png"))); // NOI18N
        viscerale.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        viscerale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                visceraleActionPerformed(evt);
            }
        });
        jPanel1.add(viscerale);
        viscerale.setBounds(270, 30, 110, 60);

        ophta.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/reservationdesblocop/images/oph.png"))); // NOI18N
        ophta.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        ophta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ophtaActionPerformed(evt);
            }
        });
        jPanel1.add(ophta);
        ophta.setBounds(130, 30, 130, 60);

        gyné.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/reservationdesblocop/images/gyneco.png"))); // NOI18N
        gyné.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        gyné.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gynéActionPerformed(evt);
            }
        });
        jPanel1.add(gyné);
        gyné.setBounds(0, 30, 120, 60);

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/reservationdesblocop/images/specf.png"))); // NOI18N
        jPanel1.add(jLabel2);
        jLabel2.setBounds(0, 0, 1043, 610);

        javax.swing.GroupLayout deskLayout = new javax.swing.GroupLayout(desk);
        desk.setLayout(deskLayout);
        deskLayout.setHorizontalGroup(
            deskLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1040, Short.MAX_VALUE)
        );
        deskLayout.setVerticalGroup(
            deskLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 520, Short.MAX_VALUE)
        );

        jPanel1.add(desk);
        desk.setBounds(0, 90, 1040, 520);

        close.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        close.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                closeMouseClicked(evt);
            }
        });
        jPanel1.add(close);
        close.setBounds(1010, 4, 30, 20);

        resize.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        resize.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                resizeMouseClicked(evt);
            }
        });
        jPanel1.add(resize);
        resize.setBounds(985, 4, 20, 20);

        movejFrame.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        movejFrame.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                movejFrameMouseDragged(evt);
            }
        });
        movejFrame.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                movejFrameMousePressed(evt);
            }
        });
        jPanel1.add(movejFrame);
        movejFrame.setBounds(5, 4, 970, 20);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 1043, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 612, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void gynéActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gynéActionPerformed
  this.desk.removeAll();
 this.desk.repaint();
        
 gyné lc = null;
        try {
            lc = new gyné();
        } catch (SQLException ex) {
            Logger.getLogger(specialités.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(specialités.class.getName()).log(Level.SEVERE, null, ex);
        }
   this.desk.add(lc);
        try {
            lc.setMaximum(true);
        } catch (PropertyVetoException ex) {
            Logger.getLogger(specialités.class.getName()).log(Level.SEVERE, null, ex);
        }
lc.show();
    }//GEN-LAST:event_gynéActionPerformed

    private void ophtaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ophtaActionPerformed
          this.desk.removeAll();
       this.desk.repaint();
        
        ophtalmologie lc = new ophtalmologie();
        this.desk.add(lc);
        try {
            lc.setMaximum(true);
        } catch (PropertyVetoException ex) {
            Logger.getLogger(specialités.class.getName()).log(Level.SEVERE, null, ex);
        }
        lc.show();
    }//GEN-LAST:event_ophtaActionPerformed

    private void visceraleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_visceraleActionPerformed
       this.desk.removeAll();
       this.desk.repaint();
        
        viscerale lc = null;
        try {
            lc = new viscerale();
        } catch (SQLException ex) {
            Logger.getLogger(specialités.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(specialités.class.getName()).log(Level.SEVERE, null, ex);
        }
        this.desk.add(lc);
        try {
            lc.setMaximum(true);
        } catch (PropertyVetoException ex) {
            Logger.getLogger(specialités.class.getName()).log(Level.SEVERE, null, ex);
        }
        lc.show();
    }//GEN-LAST:event_visceraleActionPerformed

    private void urologieActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_urologieActionPerformed
          this.desk.removeAll();
       this.desk.repaint();
        
       URO lc = null;
        try {
            lc = new URO();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(specialités.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(specialités.class.getName()).log(Level.SEVERE, null, ex);
        }
        this.desk.add(lc);
        try {
            lc.setMaximum(true);
        } catch (PropertyVetoException ex) {
            Logger.getLogger(specialités.class.getName()).log(Level.SEVERE, null, ex);
        }
        lc.show();
    }//GEN-LAST:event_urologieActionPerformed

    private void ORLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ORLActionPerformed
          this.desk.removeAll();
       this.desk.repaint();
        
        ORL lc = null;
        try {
            lc = new ORL();
        } catch (SQLException ex) {
            Logger.getLogger(specialités.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(specialités.class.getName()).log(Level.SEVERE, null, ex);
        }
        this.desk.add(lc);
        try {
            lc.setMaximum(true);
        } catch (PropertyVetoException ex) {
            Logger.getLogger(specialités.class.getName()).log(Level.SEVERE, null, ex);
        }
        lc.show();
    }//GEN-LAST:event_ORLActionPerformed

    private void plasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_plasActionPerformed
          this.desk.removeAll();
       this.desk.repaint();
        
        plas lc = null;
        try {
            lc = new plas();
        } catch (SQLException ex) {
            Logger.getLogger(specialités.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(specialités.class.getName()).log(Level.SEVERE, null, ex);
        }
        this.desk.add(lc);
        try {
            lc.setMaximum(true);
        } catch (PropertyVetoException ex) {
            Logger.getLogger(specialités.class.getName()).log(Level.SEVERE, null, ex);
        }
        lc.show();
    }//GEN-LAST:event_plasActionPerformed

    private void orthoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_orthoActionPerformed
          this.desk.removeAll();
       this.desk.repaint();
        
        ortho lc = null;
        lc = new ortho();
        this.desk.add(lc);
        try {
            lc.setMaximum(true);
        } catch (PropertyVetoException ex) {
            Logger.getLogger(specialités.class.getName()).log(Level.SEVERE, null, ex);
        }
        lc.show();
    }//GEN-LAST:event_orthoActionPerformed

    private void stomaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stomaActionPerformed
          this.desk.removeAll();
       this.desk.repaint();
        
        stomatologie lc = null;
        try {
            lc = new stomatologie();
        } catch (SQLException ex) {
            Logger.getLogger(specialités.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(specialités.class.getName()).log(Level.SEVERE, null, ex);
        }
        this.desk.add(lc);
        try {
            lc.setMaximum(true);
        } catch (PropertyVetoException ex) {
            Logger.getLogger(specialités.class.getName()).log(Level.SEVERE, null, ex);
        }
        lc.show();
    }//GEN-LAST:event_stomaActionPerformed

    private void closeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_closeMouseClicked
       System.exit(0);
    }//GEN-LAST:event_closeMouseClicked

    private void resizeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_resizeMouseClicked
    this.setState(login.ICONIFIED);
    }//GEN-LAST:event_resizeMouseClicked

    private void movejFrameMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_movejFrameMouseDragged
        int x=evt.getXOnScreen();
        int y=evt.getYOnScreen();
        this.setLocation(x - xMouse, y - yMouse);
    }//GEN-LAST:event_movejFrameMouseDragged

    private void movejFrameMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_movejFrameMousePressed
          xMouse = evt.getX();
        yMouse = evt.getY();
    }//GEN-LAST:event_movejFrameMousePressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(specialités.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(specialités.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(specialités.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(specialités.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new specialités().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ORL;
    private javax.swing.JLabel close;
    private javax.swing.JDesktopPane desk;
    private javax.swing.JButton gyné;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel movejFrame;
    private javax.swing.JButton ophta;
    private javax.swing.JButton ortho;
    private javax.swing.JButton plas;
    private javax.swing.JLabel resize;
    private javax.swing.JButton stoma;
    private javax.swing.JButton urologie;
    private javax.swing.JButton viscerale;
    // End of variables declaration//GEN-END:variables
}
